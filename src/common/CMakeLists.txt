#! /usr/bin/cmake -P
#! -*- coding:utf-8; mode:cmake; -*-

# Copyright (C) 2018 Karlsruhe Institute of Technology
# Copyright (C) 2018 Moritz Klammler <moritz.klammler@alumni.kit.edu>
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.

configure_file("${CMAKE_CURRENT_SOURCE_DIR}/mainpage.dox.in" "${CMAKE_CURRENT_BINARY_DIR}/mainpage.dox" @ONLY)

# Do not remove or change the lines that say "begin / end component list" and do not put such lines anywhere else in
# this file.  They are recognized by a maintainer script that parses this file.

set(COMMON_COMPONENTS
    # [BEGIN COMPONENT LIST]
    angular
    cli
    cuboid
    data_analysis
    edge_crossing
    edge_length
    enums/algorithms
    enums/binnings
    enums/compressions
    enums/distributions
    enums/fileformats
    enums/kernels
    enums/projections
    enums/terminals
    enums/treatments
    file
    fingerprint
    histogram
    io
    iosupp
    json
    math_constants
    meta
    normalizer
    numeric
    ogdf_fix
    ogdf_fwd
    pairwise
    point
    princomp
    projection
    random
    rdf
    regression
    rlimits
    sliding
    stochastic
    stress
    strings
    tension
    useful
    # [END COMPONENT LIST]
    CACHE INTERNAL "Components for the common utility library"
)

add_library(common STATIC dummy.cxx)
target_include_directories(common PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}" "${CMAKE_CURRENT_BINARY_DIR}")
target_link_libraries(common PUBLIC ogdf ${Boost_IOSTREAMS_LIBRARIES} ${Boost_PROGRAM_OPTIONS_LIBRARIES})

set(generated_enum_files CACHE INTERNAL "Files generated by the enum code generator")

foreach(comp ${COMMON_COMPONENTS})
    target_sources(common PRIVATE "${comp}.cxx")
    if("${comp}" MATCHES "enums/.*")
        list(APPEND generated_enum_files "${CMAKE_CURRENT_BINARY_DIR}/${comp}.hxx")
        list(APPEND generated_enum_files "${CMAKE_CURRENT_BINARY_DIR}/${comp}.cxx")
        list(APPEND generated_enum_files "${PROJECT_BINARY_DIR}/test/unit/${comp}_test.txx")
    endif()
endforeach(comp)

add_custom_command(
    OUTPUT ${generated_enum_files}
    COMMAND "${Python3_EXECUTABLE}" "${PROJECT_SOURCE_DIR}/codegen/enums.py" "${PROJECT_SOURCE_DIR}/codegen/enums.json"
    DEPENDS "${PROJECT_SOURCE_DIR}/codegen/enums.py" "${PROJECT_SOURCE_DIR}/codegen/enums.json"
    WORKING_DIRECTORY "${PROJECT_BINARY_DIR}"
    COMMENT "Generating enumeration boilerplate C++ code ..."
    VERBATIM
)

add_custom_target(common-codegen DEPENDS ${generated_enum_files})
